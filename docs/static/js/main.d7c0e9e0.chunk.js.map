{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","type","value","onChange","e","target","onClick","preventDefault","categorias","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAa5C,OACI,qCACI,8CACA,uBACIC,KAAgB,OAChBC,MAAoBH,EACpBI,SAfgB,SAACC,GACzBJ,EAAcI,EAAEC,OAAOH,UAgBnB,wBAAQI,QAbQ,SAACF,GACjBA,EAAEG,iBACFV,GAAc,SAAAW,GAAU,OAAMT,GAAN,mBAAoBS,OAC5CR,EAAc,KAUd,yB,+BCxBCS,EAAO,uCAAM,WAAMC,GAAN,uBAAAC,EAAA,6DAChBC,EADgB,iDACwCC,UAAUH,GADlD,+DAEII,MAAMF,GAFV,cAEhBG,EAFgB,gBAGIA,EAAKC,OAHT,uBAGdC,EAHc,EAGdA,KACFC,EAAcD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACjC,MAAQ,CACJC,GAAYD,EAAIC,GAChBC,MAAYF,EAAIE,MAChBV,IAAG,UAASQ,EAAIG,cAAb,aAAS,EAAYC,iBAAiBZ,QAR3B,kBAWfM,GAXe,4CAAN,sDCGPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,sBAAKc,UAAU,OAAf,UACI,qBACIC,IAAMf,EACNgB,IAAMN,IAEV,4BAAKA,QCLJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDP,SAACA,GAAc,IAAD,EAEhBZ,mBAAS,CAC/BmB,KAAY,GACZa,SAAY,IAJ0B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAiB1C,OAVAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAACC,GACHH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGrB,CAACpB,IAEGqB,EDdwBK,CAAa1B,GAAhCa,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAEpB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAwEhB,IAAdA,GACzDoB,GAAW,mBAAGJ,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,8CAAf,SAEQH,EAAOJ,KAAI,SAAEC,GAAF,OACX,cAAC,EAAD,eAESA,GADKA,EAAIC,aEb/B,SAASgB,IAAgB,IAAD,EACSvC,mBAAS,CAAC,cADnB,mBACpBwC,EADoB,KACRzC,EADQ,KAG3B,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEQyC,EAAWnB,KAAK,SAAAT,GAAQ,OAEpB,cAAC,EAAD,CAEIA,SAAiBA,GADAA,WCX7C6B,IAASC,OACL,cAACH,EAAD,IACFI,SAASC,eAAe,W","file":"static/js/main.d7c0e9e0.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n    \r\n    const handleInputChange =   (e)     =>  {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit  =   (e) =>  {\r\n            e.preventDefault();\r\n            setCategories(categorias => [ inputValue,...categorias] )\r\n            setInputValue('');\r\n    }\r\n    return (\r\n        <>\r\n            <h2>Add Category</h2>\r\n            <input \r\n                type        =   \"text\" \r\n                value       =   {   inputValue  }\r\n                onChange    =   {   handleInputChange   }\r\n            />\r\n            <button onClick={handleSubmit}>Agregar</button>\r\n        </>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories   :   PropTypes.func.isRequired,\r\n}","export const getGifs   =  async(category)  =>{\r\n    const url       =   `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=T0Ud5rKUuSaWi5QQ2mdkswhvcl4KH0xw`;\r\n    const resp      =   await fetch(url);\r\n    const { data }  =   await resp.json();\r\n    const gifs      =   data.map( img => {\r\n        return  {\r\n            id      :   img.id,\r\n            title   :   img.title,\r\n            url     :   img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img \r\n                src={ url } \r\n                alt={ title }\r\n            />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n}","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\" key = { category }> { category }</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n            <div className=\"animate__animated animate__fadeIn card-grid\">\r\n                {\r\n                    images.map(( img )=>(\r\n                    <GifGridItem \r\n                        key =   { img.id }\r\n                        { ...img }\r\n                    />))\r\n                }   \r\n            </div>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\n\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs   =   (category)  =>{\r\n    \r\n    const [state, setState] = useState({\r\n        data    :   [],\r\n        loading :   true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then((imgs)=>{\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport function GifExpertApp() {\r\n    const [categories, setCategories] = useState(['Samurai X'])\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr/>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <ol>\r\n                { \r\n                    categories.map( category =>(\r\n                        \r\n                        <GifGrid \r\n                            key         =   {category}\r\n                            category    =   {category}\r\n                        />\r\n                    )) \r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}